name: Java CI with Gradle & Deploy to EC2

# main 브런치에 push가 되면 아래의 flow가 실행됩니다.
on:
  push:
    branches: [ "main" ]
   
# flow에서 사용할 변수 같은 느낌입니다.
env:
  AWS_REGION: us-east-1
  S3_BUCKET_NAME: test-github-actions-s3-bucket-metasu
  CODE_DEPLOY_APPLICATION_NAME: metasuTest
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-code-deployment-group
  working-directory: ./프로젝트 경로 # 이 코드는 제 프로젝트 경로를 맞춰주기 위해 적어주었습니다. 필요하시면 적으세요 !

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
# 아래의 flow들이 차례대로 실행됩니다.
    steps:

    - name: Checkout
      uses: actions/checkout@v3
    

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}
        

    - name: Build with Gradle
      run: ./gradlew clean build
      working-directory: ${{ env.working-directory }}
      

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        

    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .
          

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
